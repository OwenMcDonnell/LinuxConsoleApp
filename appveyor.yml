version: 1.0.{build}

#image: Ubuntu

#init:
 # - sh: echo $APPVEYOR_BUILD_NUMBER
  #- sh: a=`expr 1 - 1` && if [[ $a == 0 ]]; then echo $a; fi
  

environment:
  test_var: test
    
install:
  - ps: |
  
    Write-Host "Installing GitVersion 3.6.5..." -ForegroundColor Cyan
    $gvPath = "$env:SYSTEMDRIVE\Tools\GitVersion"
    if(Test-Path $gvPath) {
        del $gvPath -Recurse -Force
    }

    $tempPath = "$env:USERPROFILE\GitVersion"
    nuget install gitversion.commandline -version 3.6.5 -excludeversion -outputdirectory $tempPath

    [IO.Directory]::Move("$tempPath\gitversion.commandline\tools", $gvPath)
    del $tempPath -Recurse -Force
    Add-Path $gvPath
    Write-Host "GitVersion 3.6.5 installed" -ForegroundColor Green
  - nuget restore
  #- ps: |
   #   [environment]::GetEnvironmentVariable("PATH","Machine").split(";")
  - echo %xunit20%    
  #- cd ..
  #- ls
  #- cd $APPVEYOR_BUILD_FOLDER
  #- $APPVEYOR_BUILD_FOLDER
  - nuget restore
  
artifacts:
- path: LinuxConsoleApp\bin\**\*\

build:
  project: LinuxConsoleApp.sln
  publish_wap: true
  
before_deploy:
  - ps: |
          $artifactPaths = ''
          foreach ($artifactName in $artifacts.keys) { 
            $artifacts[$artifactName]
            7z a package.zip $artifacts[$artifactName].path
            $artifactPaths += $artifacts[$artifactName].path
          }
          write-host $artifactPaths
          
  - appveyor PushArtifact package.zip 
          
deploy_script: 
  - ps: | 
          $artifacts.count
          foreach ($artifactName in $artifacts.keys) {             
            $artifacts[$artifactName]
          }
